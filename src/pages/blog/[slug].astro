---
import StandardLayout from "../../layouts/Layout.astro";
import { format } from "date-fns";
import Tags from "../../components/tags";
import { getPost } from "../../fetchers/posts";

// Get the slug from URL parameters
const { slug } = Astro.params;

// Handle invalid slug case
if (!slug) {
    return Astro.redirect("/404");
}

// Fetch post data
let post;
try {
    const response = await getPost(slug);
    post = response.post;
} catch (error) {
    console.error("Error fetching post:", error);
    return Astro.redirect("/404");
}

// Format dates
const publishedDate = post.published_on
    ? format(new Date(Number(post.published_on) * 1000), "d MMMM yyyy")
    : "Publication date unavailable";

const modifiedDate = post.modified_on
    ? format(new Date(Number(post.modified_on) * 1000), "d MMMM yyyy")
    : "Unknown";
---

<StandardLayout
    title={post.title}
    description={post.excerpt}
    image={post.image}
    type="article"
>
    <article class="container mx-auto px-4 py-8 max-w-4xl">
        <!-- Header section with image -->
        {
            post.image && (
                <div class="relative w-full h-96 mb-8 rounded-lg overflow-hidden">
                    <img
                        src={post.image}
                        alt={post.title}
                        class="w-full h-full object-cover"
                    />
                </div>
            )
        }

        <!-- Post metadata -->
        <div class="mb-8">
            <h1 class="text-4xl font-bold mb-4 border-b pb-2">
                {post.title}
            </h1>

            <div class="flex items-center text-gray-600 mb-4">
                <span class="mr-4">By {post.author}</span>
                <span class="mr-4">â€¢</span>
                <time
                    datetime={new Date(
                        Number(post.published_on) * 1000,
                    ).toISOString()}
                >
                    {publishedDate}
                </time>
            </div>

            <div class="flex flex-wrap gap-2 mb-6">
                {
                    post.category && (
                        <span class="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium">
                            {post.category}
                        </span>
                    )
                }
                <Tags tags={post.tags} />
            </div>

            {
                post.excerpt && (
                    <div class="text-xl text-gray-600 italic mb-8 border-l-4 border-gray-300 pl-4">
                        {post.excerpt}
                    </div>
                )
            }
        </div>

        <div
            class="prose prose-lg max-w-none text-justify content-container"
            set:html={post.content}
        />

        <div class="mt-12 pt-6 border-t text-sm">
            <p>
                Last updated: {modifiedDate}
            </p>
            {post.modified_by && <p>Updated by: {post.modified_by}</p>}
        </div>
    </article>
</StandardLayout>
